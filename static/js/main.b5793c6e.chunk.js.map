{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","selected","onClick","updateState0","text","updateState1","updateState2","updateState3","Circles","App","state","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEe,SAASA,EAAeC,GACnC,OACI,sBAAKC,UAAU,iBAAf,UAEI,wBAAQA,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMI,gBAA7E,SAA8FJ,EAAMK,KAAK,KACzG,wBAAQJ,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMM,gBAA7E,SAA8FN,EAAMK,KAAK,KACzG,wBAAQJ,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMO,gBAA7E,SAA8FP,EAAMK,KAAK,KACzG,wBAAQJ,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMQ,gBAA7E,SAA8FR,EAAMK,KAAK,Q,MCNtG,SAASI,EAAQT,GAC5B,OACI,sBAAKC,UAAU,UAAf,UAEI,qBAAKA,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMI,gBAA1E,eACA,qBAAKH,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMI,gBAA1E,eACA,qBAAKH,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMI,gBAA1E,eACA,qBAAKH,UAAWD,EAAME,SAAS,GAAK,WAAa,GAAIC,QAAS,kBAAMH,EAAMI,gBAA1E,kB,ICoDGM,E,4MAxDbC,MAAQ,CACNT,SAAU,EAAC,GAAM,GAAO,GAAO,GAC/BG,KAAM,CAAC,oBAAqB,kBAAmB,kBAAmB,oB,EAGpED,aAAe,WACb,EAAKQ,SAAS,CACZV,SAAU,EAAC,GAAM,GAAO,GAAO,GAC/BG,KAAM,CAAC,oBAAqB,kBAAmB,kBAAmB,sB,EAGtEC,aAAe,WACb,EAAKM,SAAS,CACZV,SAAU,EAAC,GAAO,GAAM,GAAO,GAC/BG,KAAM,CAAC,kBAAmB,oBAAqB,kBAAmB,sB,EAGtEE,aAAe,WACb,EAAKK,SAAS,CACZV,SAAU,EAAC,GAAO,GAAO,GAAM,GAC/BG,KAAM,CAAC,kBAAmB,mBAAoB,oBAAoB,sB,EAGtEG,aAAe,WACb,EAAKI,SAAS,CACZV,SAAU,EAAC,GAAO,GAAO,GAAO,GAChCG,KAAM,CAAC,kBAAmB,mBAAoB,kBAAkB,wB,4CAIpE,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACEC,SAAUW,KAAKF,MAAMT,SACrBG,KAAMQ,KAAKF,MAAMN,KACjBD,aAAcS,KAAKT,aACnBE,aAAcO,KAAKP,aACnBC,aAAcM,KAAKN,aACnBC,aAAcK,KAAKL,eAErB,cAAC,EAAD,CACEN,SAAUW,KAAKF,MAAMT,SACrBE,aAAcS,KAAKT,aACnBE,aAAcO,KAAKP,aACnBC,aAAcM,KAAKN,aACnBC,aAAcK,KAAKL,yB,GAjDbM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5793c6e.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleSelector.css'\nexport default function CircleSelector(props) {\n    return (\n        <div className='CircleSelector'>\n            {/* className={selected ? 'selected' : ''} */}\n            <button className={props.selected[0] ? 'selected' : ''} onClick={() => props.updateState0()}>{props.text[0]}</button>\n            <button className={props.selected[1] ? 'selected' : ''} onClick={() => props.updateState1()}>{props.text[1]}</button>\n            <button className={props.selected[2] ? 'selected' : ''} onClick={() => props.updateState2()}>{props.text[2]}</button>\n            <button className={props.selected[3] ? 'selected' : ''} onClick={() => props.updateState3()}>{props.text[3]}</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Circles.css'\n\nexport default function Circles(props) {\n    return (\n        <div className='Circles'>\n            {/* className={selected ? 'selected' : ''} */}\n            <div className={props.selected[0] ? 'selected' : ''} onClick={() => props.updateState0()}>1</div>\n            <div className={props.selected[1] ? 'selected' : ''} onClick={() => props.updateState0()}>2</div>\n            <div className={props.selected[2] ? 'selected' : ''} onClick={() => props.updateState0()}>3</div>\n            <div className={props.selected[3] ? 'selected' : ''} onClick={() => props.updateState0()}>4</div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector';\nimport Circles from './components/Circles/Circles';\n\nclass App extends Component {\n  state = {\n    selected: [true, false, false, false],\n    text: ['CIRCLE 1 SELECTED', 'SELECT CIRCLE 2', 'SELECT CIRCLE 3', 'SELECT CIRCLE 4']\n  }\n\n  updateState0 = () => {\n    this.setState({\n      selected: [true, false, false, false],\n      text: ['CIRCLE 1 SELECTED', 'SELECT CIRCLE 2', 'SELECT CIRCLE 3', 'SELECT CIRCLE 4']\n    })\n  }\n  updateState1 = () => {\n    this.setState({\n      selected: [false, true, false, false],\n      text: ['SELECT CIRCLE 1', 'CIRCLE 2 SELECTED', 'SELECT CIRCLE 3', 'SELECT CIRCLE 4']\n    })\n  }\n  updateState2 = () => {\n    this.setState({\n      selected: [false, false, true, false],\n      text: ['SELECT CIRCLE 1', 'SELECTE CIRCLE 2', 'CIRCLE 3 SELECTED','SELECT CIRCLE 4']\n    })\n  }\n  updateState3 = () => {\n    this.setState({\n      selected: [false, false, false, true],\n      text: ['SELECT CIRCLE 1', 'SELECTE CIRCLE 2', 'SELECT CIRCLE 3','CIRCLE 4 SELECTED']\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            selected={this.state.selected}\n            text={this.state.text}\n            updateState0={this.updateState0}\n            updateState1={this.updateState1}\n            updateState2={this.updateState2}\n            updateState3={this.updateState3}\n          />\n          <Circles \n            selected={this.state.selected} \n            updateState0={this.updateState0}\n            updateState1={this.updateState1}\n            updateState2={this.updateState2}\n            updateState3={this.updateState3}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}